name: react-native-ios-build-ipa
on: 
  push:
    branches: main
jobs:
  build:
    runs-on: macos-latest
    env:
      XCODE_VERSION: ${{ '11.4.1' }}
      XCODE_PROJECT: ${{ 'Test1.xcodeproj' }}
      XCODE_SCHEME: ${{ 'Test1' }}
      XCODE_EXPORT_PATH: ${{ './artifacts' }}

      KEYCHAIN_FILE: ${{ '/tmp/temp.keychain' }}

      CERT_FILE: ${{ '.github/secrets/ios_distribution.p12' }}
      PROV_FILE: ${{ '.github/secrets/Test1.mobileprovision'}}
      CERT_FILE_GPG: ${{ '.github/secrets/ios_distribution.p12.gpg' }}
      PROV_FILE_GPG: ${{ '.github/secrets/Test1.mobileprovision.gpg'}}

      CERT_PASS: ${{ secrets.CERTS_PWD }}
    steps:
    - name: Select latest Xcode
      run: "sudo xcode-select -s /Applications/Xcode_$XCODE_VERSION.app"
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: "12.x"
    #- uses: actions/setup-ruby@v1
    #  with:
    #    ruby-version: "2.x"
    #- name: Run Unit and UI Tests 
    #  run: |
    #    cd ios
    #    /usr/bin/xcodebuild test -project "$XCODE_SCHEME.xcodeproj" -scheme "$XCODE_SCHEME" -destination 'platform=iOS Simulator,name=iPhone 11'
    #    cd ..
    - name: Set up Codesign
      run: |
        gpg -d -o "$CERT_FILE" --pinentry-mode=loopback --passphrase "$CERT_PASS" "$CERT_FILE_GPG"
        gpg -d -o "$PROV_FILE" --pinentry-mode=loopback --passphrase "$CERT_PASS" "$PROV_FILE_GPG"

        security create-keychain -p "" "$KEYCHAIN_FILE"
        #security list-keychains -d user -s "$KEYCHAIN_FILE"
        security list-keychains -d user -s "$KEYCHAIN_FILE" $(security list-keychains -d user | tr -d '"')
        #security set-keychain-settings -lut 21600 "$KEYCHAIN_FILE"
        security set-keychain-settings "$KEYCHAIN_FILE"
        #security import "$CERT_FILE" -P "$CERT_PASS" -A -t cert -f pkcs12 -k "$KEYCHAIN_FILE"
        security import "$CERT_FILE" -k "$KEYCHAIN_FILE" -P "$CERT_PASS" -T "/usr/bin/codesign"
        security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN_FILE"
        #security default-keychain -s "$KEYCHAIN_FILE"
        security default-keychain -d user -s "$KEYCHAIN_FILE"
        security unlock-keychain -p "" "$KEYCHAIN_FILE"
        security find-identity -v -p codesigning

        mkdir -p "~/Library/MobileDevice/Provisioning Profiles"
        cp "$PROV_FILE" "~/Library/MobileDevice/Provisioning Profiles"

    - name: Archive 
      run: |
        mkdir artifacts
        npm install
        #npx react-native bundle --entry-file index.js --platform ios --dev false --bundle-output ios/main.jsbundle --assets-dest ios
        cd ios
        pod install --repo-update

        xcodebuild archive -project "$XCODE_SCHEME.xcodeproj" -scheme "$XCODE_SCHEME" -configuration release -archivePath "$XCODE_SCHEME.xcarchive"
        #xcodebuild build -project "$XCODE_SCHEME.xcodeproj" -scheme "$XCODE_SCHEME" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

    - name: Export for App Store
      run: | 
        xcodebuild -exportArchive -archivePath "$XCODE_SCHEME.xcarchive" -exportOptionsPlist ExportOptions.Plist -exportPath "$XCODE_EXPORT_PATH"
    - name: Upload Artifact 
      uses: actions/upload-artifact@v2 
      with: 
        name: Artifacts 
        path: ./artifacts
